{
  "type": "nomad_meta_info_1_0",
  "description": "meta info used by the Vasp parser, all names are expected to start with x_vasp_",
  "dependencies": [ {
      "relativePath": "common.nomadmetainfo.json"
    }],
  "metaInfos": [ {
      "description": "build date as string",
      "dtypeStr": "C",
      "name": "vasp_build_date",
      "shape": [],
      "superNames": [
        "program_info"
      ]
    }, {
      "description": "date of last modification of the source as string",
      "dtypeStr": "C",
      "name": "vasp_src_date",
      "shape": [],
      "superNames": [
        "program_info"
      ]
    }, {
      "description": "reference to the atom kinds of each atom",
      "dtypeStr": "r",
      "name": "x_vasp_atom_kind_refs",
      "referencedSections": [
        "section_method_atom_kind"
      ],
      "shape": [
        "number_of_atoms"
      ],
      "superNames": [
        "section_method"
      ]
    }, {
      "description": "algorithm: Normal (Davidson) | Fast | Very_Fast (RMM-DIIS) | Conjugate | All | Damped | Subrot | Eigenval | None | Nothing | Exact | Diag. Value stored in incar.",
      "dtypeStr": "C",
      "name": "x_vasp_incar_algo",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "mixing amount. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_amix",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "maximum distance for pair correlation function. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_apaco",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "tags for mixing. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_bmix",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "relative energy change error. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_deper",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "center of cell for dipol. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_dipol",
      "shape": [
        3
      ],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "fine tuning of diagonalization accuracy (EDIFF/N-BANDS/4). Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_ebreak",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "stopping-criterion for ionic upd. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_ediffg",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "stopping-criterion for electronic upd. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_ediff",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "EMAX energy-range for DOSCAR file. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_emin",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "energy cutoff in eV. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_encut",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param",
        "settings_numerical_parameter"
      ]
    }, {
      "description": "Maximum cutoff (normally specified only in POTCAR). Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_enmax",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "xc-type: 91 Perdew -Wang 91, PE Perdew-Burke-Ernzerhof, RP revised Perdew-Burke-Ernzerhof, AM AM05 (Ref. [49,50], VASP tests see Ref. [51]), PS Perdew-Burke-Ernzerhof revised for solids (PBEsol, see Ref. [52]). Value stored in incar.",
      "dtypeStr": "C",
      "name": "x_vasp_incar_gga",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "algorithm: use only 8 (CG) or 48 (RMM DIIS). Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ialgo",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "ionic relaxation: 0-MD 1-quasi-New 2-CG. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ibrion",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "charge: 1-file 2-atom 10-const. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_icharg",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "initial electr wf. : 0-lowe 1-rand. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_iniwav",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "calculate stress and what to relax. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_isif",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "part. occupancies: -5 Bloechl -4-tet -1-fermi 0-gaus >0 MP. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ismear",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "spin polarized calculation (2-yes 1-no). Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ispin",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "ISTART startjob: 0-new 1-cont 2-samecut. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_istart",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "symmetry: 0-nonsym 1-usesym. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_isym",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "prediction of wf.: 0-non 1-charg 2-wave 3-comb. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_iwavpr",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "outer block. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_kblock",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "overlap communcation with calculations. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lasync",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "create CHGCAR. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lcharg",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Harris-correction to forces. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lcorr",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Switches on the L(S)DA+U approach. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_ldau",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "create ELFCAR. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lelf",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "create PROOUT. Value stored in incar.",
      "dtypeStr": "C",
      "name": "x_vasp_incar_lorbit",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "if data distribution in real space is done plane wise. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lplane",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "non-local projectors in real space. Value stored in incar.",
      "dtypeStr": "C",
      "name": "x_vasp_incar_lreal",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "switch off scaLAPACK. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lscalapack",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "switch off LU decomposition. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lscalu",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Determines whether the total local potential (file LOCPOT ) contains the entire local potential (ionic plus Hartree plus exchange correlation) or the electrostatic contributions only (ionic plus Hartree). Note that in VASP.5.2.12, the default is to write the entire local potential, including the exchange correlation potential. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lvhar",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "create LOCPOT. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lvtot",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "create WAVECAR. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_lwave",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "initial magnetic moments. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_magmom",
      "shape": [
        "numer_of_magmom"
      ],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of bands included in the calculation. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nbands",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Blocking for some BLAS calls. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nblk",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "inner block. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nblock",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "total number of electrons. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_nelect",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "number of non self consistent electronic steps. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nelmdl",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "min nr. of electronic steps. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nelmin",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "max nr. of electronic steps. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nelm",
      "repeats": true,
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the charges along the first lattice vector. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ngxf",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the orbitals along the first lattice vector. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ngx",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the charges along the second lattice vector. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ngyf",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the orbitals along the second lattice vector. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ngy",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the charges along the third lattice vector. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ngzf",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the orbitals along the third lattice vector. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_ngz",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "number of slots in pair correlation function. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_npaco",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "parallelization over bands. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_npar",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "number of bands are optimized at the same time with RMM-DIIS (IALGO=48). Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nsim",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "number of steps for ionic upd. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nsw",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "fix spin moment to specified value. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nupdown",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "verbosity (how much information is written by vasp). Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_nwrite",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Incar parameters. Value stored in incar.",
      "kindStr": "type_abstract_document_content",
      "name": "x_vasp_incar_param",
      "superNames": [
        "section_method"
      ]
    }, {
      "description": "mass of ions in am. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_pomass",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "time-step for ion-motion (fs). Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_potim",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "precision: medium, high or low, normal, accurate. Value stored in incar.",
      "dtypeStr": "C",
      "name": "x_vasp_incar_prec",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "determines how precise the projectors are represented in real space. Value stored in incar.",
      "dtypeStr": "b",
      "name": "x_vasp_incar_ropt",
      "shape": [
        "number_of_atom_types"
      ],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Wigner-Seitz radius for each atom type. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_rwigs",
      "shape": [
        "numer_of_atom_types"
      ],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "broadening in eV -4-tet -1-fermi 0-gaus. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_sigma",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Nose mass-parameter (am). Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_smass",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "precision in symmetry routines. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_symprec",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "Name for the system (user given denomination). Value stored in incar.",
      "dtypeStr": "C",
      "name": "x_vasp_incar_system",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "temperature at the start of the run. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_tebeg",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "temperature at the end of the run. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_teend",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "trial time step size during steepest descent phase. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_time",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "use Vosko, Wilk, Nusair interpolation. Value stored in incar.",
      "dtypeStr": "i",
      "name": "x_vasp_incar_voskown",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "fine tuning of diagonalization accuracy (eigenvalues within this thrshold are considered occupied). Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_weimin",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "ionic valence. Value stored in incar.",
      "dtypeStr": "f",
      "name": "x_vasp_incar_zval",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }, {
      "description": "algorithm: Normal (Davidson) | Fast | Very_Fast (RMM-DIIS) | Conjugate | All | Damped | Subrot | Eigenval | None | Nothing | Exact | Diag. Value prinded out after evaluating the input.",
      "dtypeStr": "C",
      "name": "x_vasp_incarout_algo",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "mixing amount. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_amix",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "maximum distance for pair correlation function. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_apaco",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "tags for mixing. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_bmix",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "relative energy change error. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_deper",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "center of cell for dipol. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_dipol",
      "shape": [
        3
      ],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "fine tuning of diagonalization accuracy (EDIFF/N-BANDS/4). Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_ebreak",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "stopping-criterion for ionic upd. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_ediffg",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "stopping-criterion for electronic upd. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_ediff",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "EMAX energy-range for DOSCAR file. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_emin",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "energy cutoff in eV. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_encut",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Maximum cutoff (normally specified only in POTCAR). Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_enmax",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "xc-type: 91 Perdew -Wang 91, PE Perdew-Burke-Ernzerhof, RP revised Perdew-Burke-Ernzerhof, AM AM05 (Ref. [49,50], VASP tests see Ref. [51]), PS Perdew-Burke-Ernzerhof revised for solids (PBEsol, see Ref. [52]). Value prinded out after evaluating the input.",
      "dtypeStr": "C",
      "name": "x_vasp_incarout_gga",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "algorithm: use only 8 (CG) or 48 (RMM DIIS). Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ialgo",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "ionic relaxation: 0-MD 1-quasi-New 2-CG. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ibrion",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "charge: 1-file 2-atom 10-const. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_icharg",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "initial electr wf. : 0-lowe 1-rand. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_iniwav",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "calculate stress and what to relax. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_isif",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "part. occupancies: -5 Bloechl -4-tet -1-fermi 0-gaus >0 MP. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ismear",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "spin polarized calculation (2-yes 1-no). Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ispin",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "ISTART startjob: 0-new 1-cont 2-samecut. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_istart",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "symmetry: 0-nonsym 1-usesym. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_isym",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "prediction of wf.: 0-non 1-charg 2-wave 3-comb. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_iwavpr",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "outer block. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_kblock",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "overlap communcation with calculations. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lasync",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "create CHGCAR. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lcharg",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Harris-correction to forces. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lcorr",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Switches on the L(S)DA+U approach. Value printed out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_ldau",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "create ELFCAR. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lelf",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "create PROOUT. Value prinded out after evaluating the input.",
      "dtypeStr": "C",
      "name": "x_vasp_incarout_lorbit",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "if data distribution in real space is done plane wise. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lplane",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "non-local projectors in real space. Value prinded out after evaluating the input.",
      "dtypeStr": "C",
      "name": "x_vasp_incarout_lreal",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "switch off scaLAPACK. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lscalapack",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "switch off LU decomposition. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lscalu",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Determines whether the total local potential (file LOCPOT ) contains the entire local potential (ionic plus Hartree plus exchange correlation) or the electrostatic contributions only (ionic plus Hartree). Note that in VASP.5.2.12, the default is to write the entire local potential, including the exchange correlation potential. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lvhar",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "create LOCPOT. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lvtot",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "create WAVECAR. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_lwave",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "initial magnetic moments. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_magmom",
      "shape": [
        "numer_of_magmom"
      ],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of bands included in the calculation. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nbands",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Blocking for some BLAS calls. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nblk",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "inner block. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nblock",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "total number of electrons. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_nelect",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "number of non self consistent electronic steps. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nelmdl",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "min nr. of electronic steps. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nelmin",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "max nr. of electronic steps. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nelm",
      "repeats": true,
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the charges along the first lattice vector. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ngxf",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the orbitals along the first lattice vector. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ngx",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the charges along the second lattice vector. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ngyf",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the orbitals along the second lattice vector. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ngy",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the charges along the third lattice vector. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ngzf",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Number of points of the FFT mesh for the orbitals along the third lattice vector. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_ngz",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "number of slots in pair correlation function. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_npaco",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "parallelization over bands. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_npar",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "number of bands are optimized at the same time with RMM-DIIS (IALGO=48). Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nsim",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "number of steps for ionic upd. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nsw",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "fix spin moment to specified value. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nupdown",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "verbosity (how much information is written by vasp). Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_nwrite",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Incar parameters. Value prinded out after evaluating the input.",
      "kindStr": "type_abstract_document_content",
      "name": "x_vasp_incarout_param",
      "superNames": [
        "section_method"
      ]
    }, {
      "description": "mass of ions in am. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_pomass",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "time-step for ion-motion (fs). Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_potim",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "precision: medium, high or low, normal, accurate. Value prinded out after evaluating the input.",
      "dtypeStr": "C",
      "name": "x_vasp_incarout_prec",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "determines how precise the projectors are represented in real space. Value prinded out after evaluating the input.",
      "dtypeStr": "b",
      "name": "x_vasp_incarout_ropt",
      "shape": [
        "number_of_atom_types"
      ],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Wigner-Seitz radius for each atom type. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_rwigs",
      "shape": [
        "numer_of_atom_types"
      ],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "broadening in eV -4-tet -1-fermi 0-gaus. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_sigma",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Nose mass-parameter (am). Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_smass",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "precision in symmetry routines. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_symprec",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "Name for the system (user given denomination). Value prinded out after evaluating the input.",
      "dtypeStr": "C",
      "name": "x_vasp_incarout_system",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "temperature at the start of the run. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_tebeg",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "temperature at the end of the run. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_teend",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "trial time step size during steepest descent phase. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_time",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "use Vosko, Wilk, Nusair interpolation. Value prinded out after evaluating the input.",
      "dtypeStr": "i",
      "name": "x_vasp_incarout_voskown",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "fine tuning of diagonalization accuracy (eigenvalues within this thrshold are considered occupied). Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_weimin",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "ionic valence. Value prinded out after evaluating the input.",
      "dtypeStr": "f",
      "name": "x_vasp_incarout_zval",
      "shape": [],
      "superNames": [
        "x_vasp_incarout_param"
      ]
    }, {
      "description": "k points generation  method",
      "dtypeStr": "C",
      "name": "x_vasp_k_points_generation_method",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param",
        "settings_k_points"
      ]
    }, {
      "description": "number of magnetic moments, number_of_atoms for ISPIN = 2, 3*number of atoms for non-collinear magnetic systems",
      "dtypeStr": "i",
      "kindStr": "type_dimension",
      "name": "x_vasp_numer_of_magmom",
      "shape": [],
      "superNames": [
        "x_vasp_incar_param"
      ]
    }]
}
