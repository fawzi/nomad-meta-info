{
  "type": "nomad_meta_info_1_0",
  "description": "common meta info, not specific to any code",
  "metaInfos": [
    {
      "name": "section_run",
      "kindStr": "type_section",
      "description": "Every section_run represents a single call of a program. What exactly is contained in a run depends on the run type and the program.",
      "superNames": []
    }, {
      "name": "section_method",
      "kindStr": "type_section",
      "description": "Every section_method section contains the various parameters that define the theory used and he approximationsdone (convergence thresholds,...)",
      "superNames": ["section_run"]
    }, {
      "name": "section_system_description",
      "description": "Every section_system_description section contains the properties required to describe the Physical system simulated: the given atomic configuration, if relevant the periodic cell, extenal potentials,...",
      "kindStr": "type_section",
      "superNames": ["section_run"]
    }, {
      "name": "section_particle_kind",
      "description": "Every section_particle_kind contains information about a different kind of particle, and is identified by a unique string.",
      "kindStr": "type_section",
      "superNames": ["section_system_description"]
    }, {
      "name": "section_particle",
      "description": "Every section_particle represents a particle (atom, ghost,...).",
      "kindStr": "type_section",
      "superNames": ["section_particle_kind"]
    }, {
      "name": "section_particle_kind_ref",
      "description": "Every section_particle_kind_ref refers to a section_particle_kind by using the same unique string.",
      "kindStr": "type_section",
      "superNames": ["section_method"]
    }, {
      "name": "section_particle_ref",
      "description": "Every section_particle_ref refers to a section_particle by its index within the particle kind.",
      "kindStr": "type_section",
      "superNames": ["section_method"]
    }, {
      "name": "section_single_point_evaluation",
      "description": "Every section_single_point_evaluation section contains the values computated or evaluated during a single point evaluation.",
      "kindStr": "type_section",
      "superNames": ["section_method", "section_system_description"]
    }, {
      "name": "energy",
      "description": "Some energy value",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": []
    }, {
      "name": "energy_component_per_atom_scf",
      "description": "An energy component per atom during scf",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy",
        "section_scf_iteration"
      ]
    }, {
      "name": "energy_component_per_atom",
      "description": "A final value of an energy component per atom",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy",
        "section_single_point_evaluation"
      ]
    }, {
      "name": "energy_component_scf",
      "description": "An energy component of the non final, non converged energy, expected to be an extensive property",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy",
        "section_scf_iteration"
      ]
    }, {
      "name": "energy_component",
      "description": "A final value of an energy component, expected to be an extensive property. ",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy",
        "section_single_point_evaluation"
      ]
    }, {
      "name": "energy_total_potential_per_atom",
      "description": "A final value of a total potential energy per atom",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy_component"
      ]
    }, {
      "name": "energy_total_potential_per_atom_scf",
      "description": "A final value of a total potential energy per atom during the scf",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy_component_per_atom_scf"
      ]
    }, {
      "name": "energy_total_potential",
      "description": "A final value of a total potential energy. Different total energies might have different 0, and so might not be directly comparable.",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy_component"
      ]
    }, {
      "name": "energy_total_potential_scf",
      "description": "A final value of a total potential energy during the scf. Different total energies might have different 0, and so might not be directly comparable.",
      "kindStr": "type_abstract_document_content",
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ]
    }, {
      "description": "Information on the scf procedure",
      "kindStr": "type_abstract_document_content",
      "name": "scf_info",
      "repeats": true,
      "shape": [],
      "superNames": [
        "section_single_point_evaluation"
      ]
    }, {
      "description": "Every section_scf_iteration section represents an scf iteration",
      "kindStr": "type_section",
      "name": "section_scf_iteration",
      "repeats": true,
      "shape": [],
      "superNames": [
        "scf_info", "section_single_point_evaluation"
      ]
    }, {
        "name":"message_debug",
        "kindStr": "type_abstract_document_content",
        "description": "A debugging message of the computational program",
        "dtypeStr": "C"
    }, {
        "name":"message_debug_run",
        "kindStr": "type_document_content",
        "description": "A debugging message of the computational program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "message_debug"]
    }, {
        "name":"message_debug_evaluation",
        "kindStr": "type_document_content",
        "description": "A debugging message of the computational program, associated with a single point evaluation",
        "dtypeStr": "C",
        "superNames": ["message_debug", "section_single_point_evaluation"]
    }, {
        "name":"message_info",
        "kindStr": "type_abstract_document_content",
        "description": "An information message of the computational program",
        "dtypeStr": "C",
        "superTypes": ["message_debug"]
    }, {
        "name":"message_info_run",
        "kindStr": "type_document_content",
        "description": "An information message of the computational program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "message_info"]
    }, {
        "name":"message_info_evaluation",
        "kindStr": "type_document_content",
        "description": "An information message of the computational program, associated with a a single point evaluation",
        "dtypeStr": "C",
        "superNames": ["message_info", "section_single_point_evaluation"]
    }, {
        "name":"message_warning",
        "kindStr": "type_abstract_document_content",
        "description": "A warning message of the computational program",
        "dtypeStr": "C",
        "superTypes": ["message_info"]
    }, {
        "name":"message_warning_run",
        "kindStr": "type_document_content",
        "description": "A warning message of the computational program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "message_warning"]
    }, {
        "name":"message_warning_evaluation",
        "kindStr": "type_document_content",
        "description": "A warning message of the computational program",
        "dtypeStr": "C",
        "superNames": ["message_warning", "section_single_point_evaluation"]
    }, {
        "name":"message_error",
        "kindStr": "type_abstract_document_content",
        "description": "An error message of the computational program",
        "dtypeStr": "C",
        "superTypes": ["message_warning"]
    }, {
        "name":"message_error_run",
        "kindStr": "type_document_content",
        "description": "A warning message of the computational program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "message_error"]
    }, {
        "name":"message_error_evaluation",
        "kindStr": "type_document_content",
        "description": "A warning message of the computational program, associated with a single point evaluation",
        "dtypeStr": "C",
        "superNames": ["message_warning", "section_single_point_evaluation"]
    }, {
        "name":"parsing_message_debug",
        "kindStr": "type_abstract_document_content",
        "description": "A debugging message of the parsing program",
        "dtypeStr": "C"
    }, {
        "name":"parsing_message_debug_run",
        "kindStr": "type_document_content",
        "description": "A debugging message of the parsing program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "parsing_message_debug"]
    }, {
        "name":"parsing_message_debug_evaluation",
        "kindStr": "type_document_content",
        "description": "A debugging message of the parsing program, associated with a single point evaluation",
        "dtypeStr": "C",
        "superNames": ["parsing_message_debug", "section_single_point_evaluation"]
    }, {
        "name":"parsing_message_info",
        "kindStr": "type_abstract_document_content",
        "description": "An information message of the parsing program",
        "dtypeStr": "C",
        "superTypes": ["parsing_message_debug"]
    }, {
        "name":"parsing_message_info_run",
        "kindStr": "type_document_content",
        "description": "An information message of the parsing program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "parsing_message_info"]
    }, {
        "name":"parsing_message_info_evaluation",
        "kindStr": "type_document_content",
        "description": "An information message of the parsing program, associated with a a single point evaluation",
        "dtypeStr": "C",
        "superNames": ["parsing_message_info", "section_single_point_evaluation"]
    }, {
        "name":"parsing_message_warning",
        "kindStr": "type_abstract_document_content",
        "description": "A warning message of the parsing program",
        "dtypeStr": "C",
        "superTypes": ["parsing_message_info"]
    }, {
        "name":"parsing_message_warning_run",
        "kindStr": "type_document_content",
        "description": "A warning message of the parsing program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "parsing_message_warning"]
    }, {
        "name":"parsing_message_warning_evaluation",
        "kindStr": "type_document_content",
        "description": "A warning message of the parsing program",
        "dtypeStr": "C",
        "superNames": ["parsing_message_warning", "section_single_point_evaluation"]
    }, {
        "name":"parsing_message_error",
        "kindStr": "type_abstract_document_content",
        "description": "An error message of the parsing program",
        "dtypeStr": "C",
        "superTypes": ["parsing_message_warning"]
    }, {
        "name":"parsing_message_error_run",
        "kindStr": "type_document_content",
        "description": "A warning message of the parsing program, associated with a run",
        "dtypeStr": "C",
        "superNames": ["section_run", "parsing_message_error"]
    }, {
        "name":"parsing_message_error_evaluation",
        "kindStr": "type_document_content",
        "description": "A warning message of the parsing program, associated with a single point evaluation",
        "dtypeStr": "C",
        "superNames": ["parsing_message_warning", "section_single_point_evaluation"]
    }, {
      "description": "Exchange Correlation (XC) potential energy: the integral of the first order functional derivative of the XC functional, integral v_xc*electron_density, i.e. the component of xc that is in the sum of the eigenvalues. Typically DFT only. Value during the SCF cycle (not converged)",
      "dtypeStr": "f",
      "name": "energy_XC_potential_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Exchange Correlation (XC) potential energy: the integral of the first order functional derivative of the XC functional, integral v_xc*electron_density, i.e. the component of XC that is in the sum of the eigenvalues. Typically DFT only. Value associated with the configuration, should be the most converged value.",
      "dtypeStr": "f",
      "name": "energy_XC_potential",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "XC energy (integral of e_xc in the DFT case) during the scf iterations",
      "dtypeStr": "f",
      "name": "energy_XC_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Final exchange correlation (XC) energy (integral of e_xc in the DFT case)",
      "dtypeStr": "f",
      "name": "energy_XC",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Parameters that control the simulation",
      "kindStr": "type_abstract_document_content",
      "name": "simulation_parameters",
      "repeats": false,
      "superNames": []
    }, {
      "description": "Parameters that control the simulation and are in the method section",
      "kindStr": "type_abstract_document_content",
      "name": "simulation_parameters_method",
      "repeats": false,
      "superNames": ["simulation_parameters", "section_method"]
    }, {
      "description": "Method parameters that control single point evaluation. This covers things like the theory level, but not the temperature of an molecular dynamics.",
      "kindStr": "type_abstract_document_content",
      "name": "simulation_parameters_method_single_point",
      "repeats": false,
      "superNames": ["simulation_parameters", "section_method"]
    }, {
      "description": "Exchange correlation (XC) treatement related information",
      "kindStr": "type_abstract_document_content",
      "name": "XC_treatement",
      "repeats": false,
      "superNames": [
        "simulation_parameters_method_single_point"
      ]
    }, {
      "description": "Exchange correlation (XC) functional related information",
      "kindStr": "type_abstract_document_content",
      "name": "XC_functional",
      "repeats": false,
      "superNames": [
        "XC_treatement"
      ]
    }, {
      "description": "Exchange correlation (XC) treatement in standarized short form, this string ignores convergence settings, and might collapse several similar methods. It consists of postHF method @ DFT method, or if DFT only just the DFT method. DFT method is the string used in XC_functional_code_simple plus self interaction correction as defined in self_interaction_correction_code_simple if given and not none. postHF is as defined in post_HF_method_code_simple",
      "name": "XC_treatement_code_simple",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "XC_treatement"
      ]
    }, {
      "description": "Exchange correlation (XC) treatement in a unique short form, this string keeps in account all settings in XC_treatement, but might be ugly/not so informative. It is built from the simple code (XC_treatement_code_simple) plus '_' and the first 10 characters of the base64 url encoding of SHA 512 checksum of a normalized json with all the contents of the XC_treatement section",
      "name": "XC_treatement_code_unique",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "XC_treatement"
      ]
    }, {
      "description": "Exchange correlation (XC) functional, in standarized short form, this string ignores convergence settings, and might collapse several similar methods if the functional is supported by libxc use its shortname, see http://www.tddft.org/programs/octopus/wiki/index.php/Libxc_functionals with non standard mixing sort the names alphabeticaly, and join mixing and xc functional name with '_', HF_X is the exact exchange. For forms with non standard parameters '_' and the first 10 characters of the base64 url encoding of the SHA 512 checksum of a normalized json dictionary with the parameters should be appended to the functional name. Unknown functionals should use 'Unknown' and the first 10 characters of the checksum of all values in XC_functional (excluding this one and XC_functional_code_unique)",
      "name": "XC_functional_code_simple",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "XC_functional"
      ]
    }, {
      "description": "Exchange correlation (XC) functional in a unique short form, this string keeps in account all settings in XC_treatement, but might be uglier, less useful for comparisons. It consists of XC_functional_code_simple and (if not already appended, as for Unknown functionals) '_' and the first 10 characters of the base64 url encoding of the SHA 512 checksum of a normalized json dictionary with all values in XC_treatement (excluding this one and XC_functional_code_simple).",
      "name": "XC_functional_code_unique",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "XC_functional"
      ]
    }, {
      "description": "Component of the exchange (X) energy at the LDA level calculated with the self consistent density of the target functional.",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_X_LDA",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Component of the exchange correlation (XC) energy at the LDA level calculated with the self consistent density of the target functional.",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_XC_LDA",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Component of the correlation (C) energy at the LDA level calculated with the self consistent density of the target functional.",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_C_LDA",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Component of the exchange (X) energy at the (Meta)GGA level using the self consistent density of the target functional (no exact exchange mixin)",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_X_MGGA",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Component of the exchange and correlation (XC) energy at the (Meta)GGA level using the self consistent density of the target functional (no exact exchange mixin)",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_XC_MGGA",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Component of the correlation (C) energy at the (Meta)GGA level using the self consistent density of the target functional (no exact exchange mixin)",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_C_MGGA",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Converged exchange (X) energy",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_X",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Converged correlation (C) energy",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_C",
      "repeats": false,
      "shape": [],
      "superNames": [
        "section_single_point_evaluation",
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Some kind of converged van der Waals energy",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_type_van_der_Waals",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ]
    }, {
      "description": "Converged van der Waals energy used in the total energy",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_van_der_Waals",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_type_van_der_Waals"
      ]
    }, {
      "description": "Converged van der Waals energy using the Tkatchenko Scheffler method",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_van_der_Waals_Tkatchenko_Scheffler",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_type_van_der_Waals"
      ]
    }, {
      "description": "Total energy per atom extrapolated for T=0 during scf itarations",
      "dtypeStr": "f",
      "name": "totalEnergyT0PerAtomScfIter",
      "repeats": false,
      "shape": [],
      "superNames": [
        "section_scf_iteration",
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Total energy per atom extapolated for T=0",
      "dtypeStr": "f",
      "name": "energy_T0_per_atom",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential_per_atom"
      ],
      "units": "J"
    }, {
      "description": "Some estimate of a quantity contributing to the error of the final values",
      "kindStr": "type_abstract_document_content",
      "name": "error_estimate_partial",
      "repeats": false,
      "shape": [],
      "superNames": ["section_single_point_evaluation"]
    }, {
      "description": "Some estimate of the a quantity contibuting to the error on the energy during the scf",
      "kindStr": "type_abstract_document_content",
      "name": "error_estimate_partial_scf",
      "repeats": false,
      "shape": [],
      "superNames": ["section_scf_iteration"]
    }, {
      "description": "Change of total energy during an scf iteration",
      "dtypeStr": "f",
      "name": "energy_change_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "error_estimate_partial_scf",
        "energy"
      ],
      "units": "J"
    }, {
      "description": "A partial (non final, non converged) energy at DFT (or HartreeFock) level",
      "kindStr": "type_abstract_document_content",
      "name": "energy_DFT_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential_scf"
      ]
    }, {
      "description": "Total dft energy extrapolated for T=0 during the scf iterations",
      "dtypeStr": "f",
      "name": "energy_DFT_T0_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential_scf"
      ],
      "units": "J"
    }, {
      "description": "A total (final, converged) energy at DFT (or HartreeFock) level",
      "kindStr": "type_abstract_document_content",
      "name": "energy_DFT",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential"
      ]
    }, {
      "description": "Converged dft energy with T->0 extrapolation (for metals)",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_DFT_T0",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential"
      ],
      "units": "J"
    }, {
      "description": "Information on the run which *in theory* should have no influence on the results",
      "kindStr": "type_abstract_document_content",
      "name": "accessory_info_run",
      "superNames": ["section_run"]
    }, {
      "description": "Information on an scf iteration which *in theory* should have no influence on the results",
      "kindStr": "type_abstract_document_content",
      "name": "accessory_info_scf",
      "superNames": ["section_scf_iteration"]
    }, {
      "description": "Information on a single point evaluation which *in theory* should have no influence on the results",
      "kindStr": "type_abstract_document_content",
      "name": "accessory_info_evaluation",
      "superNames": ["section_single_point_evaluation"]
     }, {
      "description": "Information on run date, and run timings",
      "kindStr": "type_abstract_document_content",
      "name": "time_info_run",
      "superNames": [
        "accessory_info_run"
      ]
    }, {
      "description": "Information on single point evaluation date, and timings",
      "kindStr": "type_abstract_document_content",
      "name": "time_info_evaluation",
      "superNames": [
        "accessory_info_evaluation"
      ]
    }, {
      "description": "Information on scf iteration date, and timings",
      "kindStr": "type_abstract_document_content",
      "name": "time_info_scf",
      "superNames": [
        "accessory_info_scf"
      ]
    }, {
      "description": "Internal wall clock time at the start of the run",
      "name": "time_run_wall_0",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_run"
      ],
      "units": "s"
    }, {
      "description": "Start date of the run stored as time since the unix epoch (00:00:00 UTC on 1 January 1970) in seconds",
      "name": "time_run_date_0",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_run"
      ],
      "units": "s"
    }, {
      "description": "Internal wall clock time at the end of the run",
      "name": "time_run_wall_end",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_run"
      ],
      "units": "s"
    }, {
      "description": "End date of run stored as time since the unix epoch (00:00:00 UTC on 1 January 1970) in seconds",
      "name": "time_run_date_end",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_run"
      ],
      "units": "s"
    }, {
      "description": "Start time of the run on CPU 1",
      "name": "time_run_cpu1_0",
      "dtypeStr": "f",
      "repeats": false,
      "shape": [],
      "superNames": [
        "time_info_run"
      ],
      "units": "s"
    }, {
      "description": "End time of the run on CPU 1",
      "name": "time_run_cpu1_end",
      "dtypeStr": "f",
      "repeats": false,
      "shape": [],
      "superNames": [
        "time_info_run"
      ],
      "units": "s"
    }, {
      "description": "Internal wall clock time at the start of an scf iteration",
      "name": "time_scf_wall_0",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_scf"
      ],
      "units": "s"
    }, {
      "description": "Start date of an scf iteration stored as time since the unix epoch (00:00:00 UTC on 1 January 1970) in seconds",
      "name": "time_scf_date_0",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_scf"
      ],
      "units": "s"
    }, {
      "description": "Internal wall clock time at the end of an scf iteration",
      "name": "time_scf_wall_end",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_scf"
      ],
      "units": "s"
    }, {
      "description": "End date of scf stored as time since the unix epoch (00:00:00 UTC on 1 January 1970) in seconds",
      "name": "time_scf_date_end",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_scf"
      ],
      "units": "s"
    }, {
      "description": "Start time of an scf iteration on CPU 1",
      "name": "time_scf_cpu1_0",
      "dtypeStr": "f",
      "repeats": false,
      "shape": [],
      "superNames": [
        "time_info_scf"
      ],
      "units": "s"
    }, {
      "description": "End time of an scf iteration on CPU 1",
      "name": "time_scf_cpu1_end",
      "dtypeStr": "f",
      "repeats": false,
      "shape": [],
      "superNames": [
        "time_info_scf"
      ],
      "units": "s"
    }, {
      "description": "Internal wall clock time at the start of the single point evaluation",
      "name": "time_evaluation_wall_0",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "Start date of the single point evaluation stored as time since the unix epoch (00:00:00 UTC on 1 January 1970) in seconds. Default to GMT timezone for date and times without timezone.",
      "name": "time_evaluation_date_0",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "Internal wall clock time at the end of the single point evaluation",
      "name": "time_evaluation_wall_end",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "End date of the single point evaluation stored as time since the unix epoch (00:00:00 UTC on 1 January 1970) in seconds. Default to GMT timezone for date and times without timezone.",
      "name": "time_evaluation_date_end",
      "repeats": false,
      "dtypeStr": "f",
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "Start time of the single point evaluation on CPU 1",
      "name": "time_evaluation_cpu1_0",
      "dtypeStr": "f",
      "repeats": false,
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "End time of the single point evaluation on CPU 1",
      "name": "time_evaluation_cpu1_end",
      "dtypeStr": "f",
      "repeats": false,
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "Sum of the eigenvalues per atom",
      "dtypeStr": "f",
      "name": "energy_sum_eigenvalues_per_atom",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_per_atom"
      ],
      "units": "J"
    }, {
      "description": "Sum of the eigenvalues per atom during the scf iterations.",
      "dtypeStr": "f",
      "name": "energy_sum_eigenvalues_per_atom_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_per_atom_scf"
      ],
      "units": "J"
    }, {
      "description": "Sum of the eigenvalues",
      "dtypeStr": "f",
      "name": "energy_sum_eigenvalues",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Sum of the eigenvalues during the scf iterations.",
      "dtypeStr": "f",
      "name": "energy_sum_eigenvalues_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "parameters of one particle kind",
      "kindStr": "type_abstract_document_content",
      "name": "particle_kind_parameters",
      "superNames": [
        "simulation_parameters_method_single_point"
      ]
    }, {
      "description": "Information on the program that generated the data",
      "kindStr": "type_abstract_document_content",
      "name": "program_info",
      "repeats": false,
      "shape": [],
      "superNames": ["accessory_info_run"]
    }, {
      "description": "Version of the program that was used",
      "name": "program_version",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "program_info"
      ]
    }, {
      "description": "Name of the program that generated the data",
      "name": "program_name",
      "dtypeStr": "C",
      "shape": [],
      "superNames": [
        "program_info"
      ]
    }, {
      "description": "Program compilation date and time as seconds from unix epoch (00:00:00 UTC on 1 January 1970) in seconds. Default to GMT timezone for date and times without timezone.",
      "name": "program_compilation_datetime",
      "repeats": false,
      "shape": [],
      "dtypeStr": "f",
      "superNames": [
        "program_info"
      ]
    }, {
      "description": "Host on which the program was compiled",
      "name": "program_compilation_host",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "program_info"
      ]
    }, {
      "description": "Post hartree fock method parameters",
      "name": "simulation_parameters_method_post_HF",
      "superNames": [
        "XC_treatement"
      ]
    }, {
      "description": "Møller–Plesset method parameters",
      "name": "simulation_parameters_method_MP",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "Coupled Clusters method parameters",
      "name": "simulation_parameters_method_CC",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "GW method parameters",
      "name": "simulation_parameters_method_GW",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "Multi-configurational self-consistent field method parameters",
      "name": "simulation_parameters_method_MCSCF",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "Multireference single and double configuration interaction method parameters",
      "name": "simulation_parameters_method_MR",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "Post Hartree-Fock method in standarized form. This is not fully unique. Some of the methods are: full-CI; CCS,CCS(D), CCSD, CCSD(T), CCSDT(Q)...; MP2, MP3, MP4,...; GW; MCSCF,CASSCF,CASPT2,MRCISD. The list should be extended or improved in particular with respect to the multi reference or local methods. If the value is absent or '' then no post HF method has been used.",
      "name": "post_HF_method_code_simple",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "Post Hartree-Fock method in a unique short form, this string keeps in account all settings in XC_treatement, but might be ugly/not so informative. The value is built from the simple code (post_HF_method_code_simple) plus '_' and the first 10 characters of the base64 url encoding of SHA 512 checksum of a normalized json with all the contents of the XC_treatement section (excluding this one and post_HF_method_code_simple)",
      "name": "post_HF_method_code_unique",
      "repeats": false,
      "shape": [],
      "dtypeStr": "C",
      "superNames": [
        "simulation_parameters_method_post_HF"
      ]
    }, {
      "description": "Properties actually defining the current configuration",
      "kindStr": "type_abstract_document_content",
      "name": "configuration_core",
      "repeats": false,
      "superNames": [
        "section_system_description"
      ]
    }, {
      "description": "Which of the basis vectors use periodic boundary conditions.\n    A value is valid from the definition point for all subsequent values until redefined\n    (i.e. if not changing it can be defined just once at the beginning).",
      "dtypeStr": "b",
      "name": "configuration_periodic_dimensions",
      "repeats": true,
      "shape": [],
      "superNames": [
        "configuration_core"
      ]
    }, {
      "description": "Positions of the particles (this defines a configuration and is required).",
      "dtypeStr": "f",
      "name": "particle_position",
      "repeats": true,
      "shape": [3],
      "superNames": [
        "configuration_core",
        "section_particle"
      ],
      "units": "m"
    }, {
      "description": "Information on the parallelization of the program",
      "kindStr": "type_abstract_document_content",
      "name": "parallelization_info",
      "repeats": false,
      "shape": [],
      "superNames": [
        "accessory_info_run"
      ]
    }, {
      "description": "Information on the parallelization of the program",
      "kindStr": "type_abstract_document_content",
      "name": "parallelization_info_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "accessory_info_scf"
      ]
    }, {
      "description": "Hosts that did run this simulation, this is a mapping, host->json value that might give extra program dependent information on how that host is used",
      "name": "parallel_tasks_assignement",
      "repeats": false,
      "shape": [],
      "dtypeStr": "D",
      "superNames": [
        "parallelization_info"
      ]
    }, {
      "description": "Number of parallel tasks used",
      "name": "parallel_tasks_number",
      "repeats": false,
      "shape": [],
      "dtypeStr": "i",
      "superNames": [
        "parallelization_info"
      ]
    }, {
      "description": "number of scf iterations at Dft level",
      "dtypeStr": "i",
      "name": "scf_dft_niter",
      "repeats": false,
      "shape": [],
      "superNames": [
        "scf_info"
      ]
    }, {
      "description": "time needed for an MP2 calculation",
      "dtypeStr": "f",
      "name": "time_MP2",
      "repeats": true,
      "shape": [],
      "superNames": [
        "time_info_evaluation"
      ],
      "units": "s"
    }, {
      "description": "Converged Mp2 energy correction",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_correction_MP2",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Converged total MP2 energy (base + MP2 correction)",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_MP2",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential"
      ],
      "units": "J"
    }, {
      "description": "Correction to the density-density electrostatic energy in the sum of eigenvalues (that uses the mixed density on one side), and the fully consistend density-density electrostatic energy",
      "dtypeStr": "f",
      "name": "energy_correction_hartree",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Correction to the density-density electrostatic energy in the sum of eigenvalues (that uses the mixed density on one side), and the fully consistend density-density electrostatic energy",
      "dtypeStr": "f",
      "name": "energy_correction_hartree_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Error in the hartree (electrostatic) potential energy",
      "dtypeStr": "f",
      "name": "energy_hartree_error",
      "repeats": false,
      "shape": [],
      "superNames": [
        "error_estimate_partial",
        "energy"
      ],
      "units": "J"
    }, {
      "name": "stress_tensor_kind",
      "description": "A final value of a stress tensor",
      "kindStr": "type_abstract_document_content",
      "shape": [3, 3],
      "superNames": [
        "section_run"
      ]
    }, {
      "name": "stress_tensor",
      "description": "A final value of the default stress tensor",
      "shape": [3, 3],
      "dtypeStr": "f",
      "superNames": [
        "stress_tensor_kind"
      ],
      "units": "Pa"
    }, {
      "description": "Potential energy used during the dynamics (Geometry optimization, MD,...)",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_potential_dynamics",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential"
      ],
      "units": "J"
    }, {
      "description": "Converged exact exchange energy",
      "dtypeStr": "f",
      "kindStr": "type_document_content",
      "name": "energy_HF_X",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Entropy correction, to have a potential energy that compensates the changes in occupation, so that forces at finite T do not need to keep the change of occupation in account. Value during the SCF cycle.",
      "dtypeStr": "f",
      "name": "energy_correction_entropy_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Entropy correction, to have a potential energy that compensates the changes in occupation, so that forces at finite T do not need to keep the change of occupation in account.",
      "dtypeStr": "f",
      "name": "energy_correction_entropy",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Electronic free energy during the scf iterations, this is the potential corresponding to the forces with finite T. Value during the Scf.",
      "dtypeStr": "f",
      "name": "electronic_free_energy_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential_scf"
      ],
      "units": "J"
    }, {
      "description": "Electronic free energy during the scf iterations, this is the potential corresponding to the forces with finite T.",
      "dtypeStr": "f",
      "name": "electronic_free_energy",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_total_potential"
      ],
      "units": "J"
    }, {
      "description": "Total electostatic energy (atom + electrons) during the scf itrations",
      "dtypeStr": "f",
      "name": "energy_electrostatic_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Total electostatic energy (atom + electrons)",
      "dtypeStr": "f",
      "name": "energy_electrostatic",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Electronic kinetic energy during the scf iterations",
      "dtypeStr": "f",
      "name": "electronic_kinetic_energy_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_scf"
      ],
      "units": "J"
    }, {
      "description": "Electronic kinetic energy",
      "dtypeStr": "f",
      "name": "electronic_kinetic_energy",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component"
      ],
      "units": "J"
    }, {
      "description": "Electronic free energy per atom during the scf iterations",
      "dtypeStr": "f",
      "name": "electronic_free_energy_per_atom_scf",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_per_atom_scf"
      ],
      "units": "J"
    }, {
      "description": "Electronic free energy per atom",
      "dtypeStr": "f",
      "name": "electronic_free_energy_per_atom",
      "repeats": false,
      "shape": [],
      "superNames": [
        "energy_component_per_atom"
      ],
      "units": "J"
    }, {
      "description": "A basis function related to a given atom kind",
      "kindStr": "type_abstract_document_content",
      "name": "basis_function_atomic",
      "superNames": [
        "section_particle_kind_ref"
      ]
    }, {
      "description": "An auxiliary basis function related to a given atom kind",
      "kindStr": "type_abstract_document_content",
      "name": "basis_function_atomic_auxiliary",
      "repeats": true,
      "shape": [],
      "superNames": [
        "section_particle_kind_ref"
      ]
    }, {
      "description": "Total energy minus the same number of atomic energies of the most stable form of the element calculated with the same method (functional,...), basisset and accuracy.",
      "name": "energy_formation_method_consistent",
      "superNames": [
        "energy_total_potential"
      ]
    }, {
      "description": "Total energy minus the energy of the same number of isolated atoms calculated with the same method (functional,...), basisset and accuracy.",
      "name": "energy_atomization_method_consistent",
      "superNames": [
        "energy_total_potential"
      ]
    }, {
      "description": "Total energy minus the an atom dependent contibution that depends on method, periodicity, basisset and accuracy, fitted so that the spread of the resulting binding energies is minimized.",
      "name": "energy_comparable_fitted",
      "kindStr": "type_abstract_document_content",
      "superNames": [
        "energy_total_potential"
      ]
    }, {
      "description": "First version of the fit of the total energy minus the an atom dependent contibution that depends on method, periodicity, basisset and accuracy, fitted so that the spread of the resulting binding energies is minimized.",
      "name": "energy_comparable_fitted_v1",
      "superNames": [
        "energy_comparable_fitted"
      ]
    }, {
      "description": "Some estimate of the error on the converged (final) value",
      "kindStr": "type_abstract_document_content",
      "name": "error_estimate",
      "repeats": false,
      "shape": [],
      "superNames": [
        "error_estimate_partial"
      ]
    }, {
      "description": "A quantity that is preserved by the evolution (for example kinetic+potential energy during NVE",
      "kindStr": "type_abstract_document_content",
      "name": "conserved_quantity",
      "repeats": false,
      "shape": [],
      "superNames": []
    }, {
      "name": "basis_function_atomic_auxiliary_name",
      "description": "Code dependent but explicative name of the basis function. For example fhi-aims looks at the closest standard basis set, and uses that name. If not equal appends the first 10 characters of the base64 url encoding of the SHA-512 of the diffs stored as normalized json",
      "superNames": [
          "basis_function_atomic_auxiliary"
      ],
        "shape": [],
        "dtypeStr": "C"
    }, {
      "name": "basis_function_atomic_name",
      "description": "Code dependent but explicative name of the basis function. For example fhi-aims looks at the closest standard basis set, and uses that name. If not equal appends the first 10 characters of the base64 url encoding of the SHA-512 of the diffs stored as normalized json",
      "superNames": [
          "basis_function_atomic"
      ],
        "shape": [],
        "dtypeStr": "C"
    }, {
       "name": "basis_functions_name",
        "description": "Code dependent but explicative name of the basis functions. For example fhi-aims tries to collect the same basis_function_atomic_name and create a small descriptive name, plane waves use PW_<cutoff><Unit>",
        "super_name": [ "section_method" ],
        "shape": [],
        "dtypeStr": "C"
    }
  ]
}
